plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.bryansparactising'
version = '0.0.1-SNAPSHOT'
description = 'Re-doing an old coding challenge'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	//implementation 'org.springframework.boot:spring-boot-starter-security' // Spring Security
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa' // Spring Data JPA
	implementation 'org.postgresql:postgresql:42.7.3'
	implementation 'org.liquibase:liquibase-core:4.27.0'

	// Jakarta Bean Validation (Hibernate Validator) via Spring Boot starter
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// Lombok
	compileOnly "org.projectlombok:lombok:1.18.30"
	annotationProcessor "org.projectlombok:lombok:1.18.30"

	// MapStruct
	implementation "org.mapstruct:mapstruct:1.5.5.Final"
	annotationProcessor "org.mapstruct:mapstruct-processor:1.5.5.Final"

	// test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	// For tests
	testCompileOnly 'org.projectlombok:lombok:1.18.28'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.28'
}

tasks.named('test') {
	useJUnitPlatform()
}

bootRun {
    jvmArgs = ['-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005']
}
